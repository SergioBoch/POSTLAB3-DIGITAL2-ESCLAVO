

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Aug 09 18:18:14 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  000E                     	;# 
   387  000F                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001D                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  0081                     	;# 
   407  0085                     	;# 
   408  0086                     	;# 
   409  0087                     	;# 
   410  0088                     	;# 
   411  0089                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  008F                     	;# 
   416  0090                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0094                     	;# 
   423  0095                     	;# 
   424  0096                     	;# 
   425  0097                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009A                     	;# 
   429  009B                     	;# 
   430  009C                     	;# 
   431  009D                     	;# 
   432  009E                     	;# 
   433  009F                     	;# 
   434  0105                     	;# 
   435  0107                     	;# 
   436  0108                     	;# 
   437  0109                     	;# 
   438  010C                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  0185                     	;# 
   444  0187                     	;# 
   445  0188                     	;# 
   446  0189                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449  0013                     _SSPBUF	set	19
   450  0014                     _SSPCON	set	20
   451  000B                     _INTCONbits	set	11
   452  0005                     _PORTA	set	5
   453  001E                     _ADRESH	set	30
   454  000C                     _PIR1bits	set	12
   455  001F                     _ADCON0bits	set	31
   456  0094                     _SSPSTATbits	set	148
   457  0094                     _SSPSTAT	set	148
   458  0085                     _TRISAbits	set	133
   459  008F                     _OSCCONbits	set	143
   460  009E                     _ADRESL	set	158
   461  008C                     _PIE1bits	set	140
   462  009F                     _ADCON1bits	set	159
   463  043B                     _TRISC3	set	1083
   464  043D                     _TRISC5	set	1085
   465  0189                     _ANSELH	set	393
   466  0188                     _ANSEL	set	392
   467                           
   468                           	psect	cinit
   469  000F                     start_initialization:	
   470                           ; #config settings
   471                           
   472  000F                     __initialization:
   473                           
   474                           ; Clear objects allocated to COMMON
   475  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   476  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   477  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   478  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   479  0013  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   480                           
   481                           ; Clear objects allocated to BANK0
   482  0014  1283               	bcf	3,5	;RP0=0, select bank0
   483  0015  1303               	bcf	3,6	;RP1=0, select bank0
   484  0016  01A6               	clrf	__pbssBANK0& (0+127)
   485  0017  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   486  0018  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   487  0019  01A9               	clrf	(__pbssBANK0+3)& (0+127)
   488  001A                     end_of_initialization:	
   489                           ;End of C runtime variable initialization code
   490                           
   491  001A                     __end_of__initialization:
   492  001A  0183               	clrf	3
   493  001B  120A  118A  2940   	ljmp	_main	;jump to C main() function
   494                           
   495                           	psect	bssCOMMON
   496  0076                     __pbssCOMMON:
   497  0076                     _ADRESLS_1:
   498  0076                     	ds	2
   499  0078                     _ADRESH_1:
   500  0078                     	ds	2
   501  007A                     _ENVIO:
   502  007A                     	ds	1
   503                           
   504                           	psect	bssBANK0
   505  0026                     __pbssBANK0:
   506  0026                     _ADRESLS_2:
   507  0026                     	ds	2
   508  0028                     _ADRESH_2:
   509  0028                     	ds	2
   510                           
   511                           	psect	cstackCOMMON
   512  0070                     __pcstackCOMMON:
   513  0070                     ?_spiRead:
   514  0070                     ??_spiRead:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_spiWrite:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??_spiWrite:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_setup:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_int_osc_MHz:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_SPI_slave:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_spiReceiveWait:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ??_spiReceiveWait:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_adc_read:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     spiWrite@dat:	
   545                           ; 2 bytes @ 0x0
   546                           
   547                           
   548                           ; 1 bytes @ 0x0
   549  0070                     	ds	2
   550  0072                     ??_adc_read:
   551  0072                     ??_SPI_slave:	
   552                           ; 1 bytes @ 0x2
   553                           
   554                           
   555                           ; 1 bytes @ 0x2
   556  0072                     	ds	4
   557                           
   558                           	psect	cstackBANK0
   559  0020                     __pcstackBANK0:
   560  0020                     ?_spiInit:
   561  0020                     ?_adc_init:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0020                     ??_int_osc_MHz:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0020                     adc_init@vref_plus:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0020                     spiInit@sDataSample:	
   571                           ; 1 bytes @ 0x0
   572                           
   573                           
   574                           ; 1 bytes @ 0x0
   575  0020                     	ds	1
   576  0021                     adc_init@vref_minus:
   577  0021                     spiInit@sClockIdle:	
   578                           ; 1 bytes @ 0x1
   579                           
   580                           
   581                           ; 1 bytes @ 0x1
   582  0021                     	ds	1
   583  0022                     ??_adc_init:
   584  0022                     int_osc_MHz@freq:	
   585                           ; 1 bytes @ 0x2
   586                           
   587  0022                     spiInit@sTransmitEdge:	
   588                           ; 1 bytes @ 0x2
   589                           
   590                           
   591                           ; 1 bytes @ 0x2
   592  0022                     	ds	1
   593  0023                     ??_spiInit:
   594  0023                     spiInit@sType:	
   595                           ; 1 bytes @ 0x3
   596                           
   597                           
   598                           ; 1 bytes @ 0x3
   599  0023                     	ds	1
   600  0024                     ??_setup:
   601  0024                     adc_init@adc_cs:	
   602                           ; 1 bytes @ 0x4
   603                           
   604                           
   605                           ; 1 bytes @ 0x4
   606  0024                     	ds	1
   607  0025                     ??_main:
   608                           
   609                           ; 1 bytes @ 0x5
   610  0025                     	ds	1
   611                           
   612                           	psect	maintext
   613  0140                     __pmaintext:	
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 73 in file "Main_Esclavo.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : B00/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          0       1       0       0       0
   636 ;;      Totals:         0       1       0       0       0
   637 ;;Total ram usage:        1 bytes
   638 ;; Hardware stack levels required when called: 5
   639 ;; This function calls:
   640 ;;		_adc_init
   641 ;;		_int_osc_MHz
   642 ;;		_setup
   643 ;; This function is called by:
   644 ;;		Startup code after reset
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648  0140                     _main:	
   649                           ;psect for function _main
   650                           
   651  0140                     l1401:	
   652                           ;incstack = 0
   653                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   654                           
   655                           
   656                           ;Main_Esclavo.c: 74:     int_osc_MHz(1);
   657  0140  3001               	movlw	1
   658  0141  120A  118A  2182  120A  118A  	fcall	_int_osc_MHz
   659                           
   660                           ;Main_Esclavo.c: 75:     adc_init(0, 0, 0);
   661  0146  1283               	bcf	3,5	;RP0=0, select bank0
   662  0147  1303               	bcf	3,6	;RP1=0, select bank0
   663  0148  01A0               	clrf	adc_init@vref_plus
   664  0149  01A1               	clrf	adc_init@vref_minus
   665  014A  3000               	movlw	0
   666  014B  120A  118A  20CC  120A  118A  	fcall	_adc_init
   667  0150                     l1403:
   668                           
   669                           ;Main_Esclavo.c: 76:     setup();
   670  0150  120A  118A  21BD  120A  118A  	fcall	_setup
   671  0155                     l1405:
   672                           
   673                           ;Main_Esclavo.c: 78:         if (ADCON0bits.GO == 0){
   674  0155  1283               	bcf	3,5	;RP0=0, select bank0
   675  0156  1303               	bcf	3,6	;RP1=0, select bank0
   676  0157  189F               	btfsc	31,1	;volatile
   677  0158  295A               	goto	u291
   678  0159  295B               	goto	u290
   679  015A                     u291:
   680  015A  2955               	goto	l1405
   681  015B                     u290:
   682  015B                     l1407:
   683                           
   684                           ;Main_Esclavo.c: 79:             if(ADCON0bits.CHS == 0){
   685  015B  0C1F               	rrf	31,w	;volatile
   686  015C  00A5               	movwf	??_main
   687  015D  0C25               	rrf	??_main,w
   688  015E  390F               	andlw	15
   689  015F  3A00               	xorlw	0
   690  0160  1D03               	skipz
   691  0161  2963               	goto	u301
   692  0162  2964               	goto	u300
   693  0163                     u301:
   694  0163  2969               	goto	l1411
   695  0164                     u300:
   696  0164                     l1409:
   697                           
   698                           ;Main_Esclavo.c: 80:                 ADCON0bits.CHS = 0b0001;
   699  0164  081F               	movf	31,w	;volatile
   700  0165  39C3               	andlw	-61
   701  0166  3804               	iorlw	4
   702  0167  009F               	movwf	31	;volatile
   703                           
   704                           ;Main_Esclavo.c: 81:             }
   705  0168  2974               	goto	l1415
   706  0169                     l1411:
   707  0169  0C1F               	rrf	31,w	;volatile
   708  016A  00A5               	movwf	??_main
   709  016B  0C25               	rrf	??_main,w
   710  016C  390F               	andlw	15
   711  016D  3A01               	xorlw	1
   712  016E  1D03               	skipz
   713  016F  2971               	goto	u311
   714  0170  2972               	goto	u310
   715  0171                     u311:
   716  0171  2974               	goto	l1415
   717  0172                     u310:
   718  0172                     l1413:
   719                           
   720                           ;Main_Esclavo.c: 83:                 ADCON0bits.CHS = 0b0000;
   721  0172  30C3               	movlw	-61
   722  0173  059F               	andwf	31,f	;volatile
   723  0174                     l1415:
   724                           
   725                           ;Main_Esclavo.c: 85:              _delay((unsigned long)((40)*(1000000/4000000.0)));
   726  0174  3002               	movlw	2
   727  0175  1283               	bcf	3,5	;RP0=0, select bank0
   728  0176  1303               	bcf	3,6	;RP1=0, select bank0
   729  0177  00A5               	movwf	??_main
   730  0178                     u327:
   731  0178  0BA5               	decfsz	??_main,f
   732  0179  2978               	goto	u327
   733  017A  0000               	nop
   734  017B                     l1417:
   735                           
   736                           ;Main_Esclavo.c: 86:             ADCON0bits.GO = 1;
   737  017B  1283               	bcf	3,5	;RP0=0, select bank0
   738  017C  1303               	bcf	3,6	;RP1=0, select bank0
   739  017D  149F               	bsf	31,1	;volatile
   740  017E  2955               	goto	l1405
   741  017F  120A  118A  280C   	ljmp	start
   742  0182                     __end_of_main:
   743                           
   744                           	psect	text1
   745  01BD                     __ptext1:	
   746 ;; *************** function _setup *****************
   747 ;; Defined at:
   748 ;;		line 92 in file "Main_Esclavo.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         0       0       0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 4
   769 ;; This function calls:
   770 ;;		_spiInit
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776  01BD                     _setup:	
   777                           ;psect for function _setup
   778                           
   779  01BD                     l1377:	
   780                           ;incstack = 0
   781                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   782                           
   783                           
   784                           ;Main_Esclavo.c: 94:     ANSEL = 0b00000011;
   785  01BD  3003               	movlw	3
   786  01BE  1683               	bsf	3,5	;RP0=1, select bank3
   787  01BF  1703               	bsf	3,6	;RP1=1, select bank3
   788  01C0  0088               	movwf	8	;volatile
   789  01C1                     l1379:
   790                           
   791                           ;Main_Esclavo.c: 95:     ANSELH = 0b00000000;
   792  01C1  0189               	clrf	9	;volatile
   793  01C2                     l1381:
   794                           
   795                           ;Main_Esclavo.c: 96:     TRISAbits.TRISA5 = 1;
   796  01C2  1683               	bsf	3,5	;RP0=1, select bank1
   797  01C3  1303               	bcf	3,6	;RP1=0, select bank1
   798  01C4  1685               	bsf	5,5	;volatile
   799  01C5                     l1383:
   800                           
   801                           ;Main_Esclavo.c: 97:     TRISAbits.TRISA0 = 1;
   802  01C5  1405               	bsf	5,0	;volatile
   803  01C6                     l1385:
   804                           
   805                           ;Main_Esclavo.c: 98:     TRISAbits.TRISA1 = 1;
   806  01C6  1485               	bsf	5,1	;volatile
   807  01C7                     l1387:
   808                           
   809                           ;Main_Esclavo.c: 99:     PORTA = 0b00000000;
   810  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   811  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   812  01C9  0185               	clrf	5	;volatile
   813  01CA                     l1389:
   814                           
   815                           ;Main_Esclavo.c: 100:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDL
      +                          E_LOW, SPI_IDLE_2_ACTIVE);
   816  01CA  01A0               	clrf	spiInit@sDataSample
   817  01CB  01A1               	clrf	spiInit@sClockIdle
   818  01CC  01A2               	clrf	spiInit@sTransmitEdge
   819  01CD  3024               	movlw	36
   820  01CE  120A  118A  21DC  120A  118A  	fcall	_spiInit
   821  01D3                     l1391:
   822                           
   823                           ;Main_Esclavo.c: 102:     INTCONbits.GIE = 1;
   824  01D3  178B               	bsf	11,7	;volatile
   825  01D4                     l1393:
   826                           
   827                           ;Main_Esclavo.c: 103:     PIR1bits.SSPIF = 0;
   828  01D4  1283               	bcf	3,5	;RP0=0, select bank0
   829  01D5  1303               	bcf	3,6	;RP1=0, select bank0
   830  01D6  118C               	bcf	12,3	;volatile
   831  01D7                     l1395:
   832                           
   833                           ;Main_Esclavo.c: 104:     PIE1bits.SSPIE = 1;
   834  01D7  1683               	bsf	3,5	;RP0=1, select bank1
   835  01D8  1303               	bcf	3,6	;RP1=0, select bank1
   836  01D9  158C               	bsf	12,3	;volatile
   837  01DA                     l1397:
   838                           
   839                           ;Main_Esclavo.c: 105:     INTCONbits.PEIE = 1;
   840  01DA  170B               	bsf	11,6	;volatile
   841  01DB                     l127:
   842  01DB  0008               	return
   843  01DC                     __end_of_setup:
   844                           
   845                           	psect	text2
   846  01DC                     __ptext2:	
   847 ;; *************** function _spiInit *****************
   848 ;; Defined at:
   849 ;;		line 12 in file "SPI.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  sType           1    wreg     enum E1292
   852 ;;  sDataSample     1    0[BANK0 ] enum E1300
   853 ;;  sClockIdle      1    1[BANK0 ] enum E1304
   854 ;;  sTransmitEdg    1    2[BANK0 ] enum E1308
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  sType           1    3[BANK0 ] enum E1292
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   866 ;;      Params:         0       3       0       0       0
   867 ;;      Locals:         0       1       0       0       0
   868 ;;      Temps:          0       0       0       0       0
   869 ;;      Totals:         0       4       0       0       0
   870 ;;Total ram usage:        4 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 3
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_setup
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880  01DC                     _spiInit:	
   881                           ;psect for function _spiInit
   882                           
   883                           
   884                           ;incstack = 0
   885                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   886                           ;spiInit@sType stored from wreg
   887  01DC  1283               	bcf	3,5	;RP0=0, select bank0
   888  01DD  1303               	bcf	3,6	;RP1=0, select bank0
   889  01DE  00A3               	movwf	spiInit@sType
   890  01DF                     l1303:
   891                           
   892                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   893  01DF  1683               	bsf	3,5	;RP0=1, select bank1
   894  01E0  1303               	bcf	3,6	;RP1=0, select bank1
   895  01E1  1287               	bcf	7,5	;volatile
   896                           
   897                           ;SPI.c: 15:     if(sType & 0b00000100)
   898  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   899  01E3  1303               	bcf	3,6	;RP1=0, select bank0
   900  01E4  1D23               	btfss	spiInit@sType,2
   901  01E5  29E7               	goto	u281
   902  01E6  29E8               	goto	u280
   903  01E7                     u281:
   904  01E7  29EE               	goto	l1309
   905  01E8                     u280:
   906  01E8                     l1305:
   907                           
   908                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   909  01E8  0822               	movf	spiInit@sTransmitEdge,w
   910  01E9  1683               	bsf	3,5	;RP0=1, select bank1
   911  01EA  1303               	bcf	3,6	;RP1=0, select bank1
   912  01EB  0094               	movwf	20	;volatile
   913  01EC                     l1307:
   914                           
   915                           ;SPI.c: 18:         TRISC3 = 1;
   916  01EC  1587               	bsf	7,3	;volatile
   917                           
   918                           ;SPI.c: 19:     }
   919  01ED  29F4               	goto	l143
   920  01EE                     l1309:
   921                           
   922                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   923  01EE  0820               	movf	spiInit@sDataSample,w
   924  01EF  0422               	iorwf	spiInit@sTransmitEdge,w
   925  01F0  1683               	bsf	3,5	;RP0=1, select bank1
   926  01F1  1303               	bcf	3,6	;RP1=0, select bank1
   927  01F2  0094               	movwf	20	;volatile
   928  01F3                     l1311:
   929                           
   930                           ;SPI.c: 23:         TRISC3 = 0;
   931  01F3  1187               	bcf	7,3	;volatile
   932  01F4                     l143:	
   933                           ;SPI.c: 24:     }
   934                           
   935                           
   936                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   937  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   938  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   939  01F6  0823               	movf	spiInit@sType,w
   940  01F7  0421               	iorwf	spiInit@sClockIdle,w
   941  01F8  0094               	movwf	20	;volatile
   942  01F9                     l144:
   943  01F9  0008               	return
   944  01FA                     __end_of_spiInit:
   945                           
   946                           	psect	text3
   947  0182                     __ptext3:	
   948 ;; *************** function _int_osc_MHz *****************
   949 ;; Defined at:
   950 ;;		line 11 in file "Oscilador.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  freq            1    wreg     unsigned char 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  freq            1    2[BANK0 ] unsigned char 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   964 ;;      Params:         0       0       0       0       0
   965 ;;      Locals:         0       1       0       0       0
   966 ;;      Temps:          0       2       0       0       0
   967 ;;      Totals:         0       3       0       0       0
   968 ;;Total ram usage:        3 bytes
   969 ;; Hardware stack levels used: 1
   970 ;; Hardware stack levels required when called: 3
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978  0182                     _int_osc_MHz:	
   979                           ;psect for function _int_osc_MHz
   980                           
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
   984                           ;int_osc_MHz@freq stored from wreg
   985  0182  1283               	bcf	3,5	;RP0=0, select bank0
   986  0183  1303               	bcf	3,6	;RP1=0, select bank0
   987  0184  00A2               	movwf	int_osc_MHz@freq
   988  0185                     l1355:
   989                           
   990                           ;Oscilador.c: 12:     switch(freq){
   991  0185  29A5               	goto	l1369
   992  0186                     l1357:
   993                           
   994                           ;Oscilador.c: 14:             OSCCONbits.IRCF = 0b100;
   995  0186  1683               	bsf	3,5	;RP0=1, select bank1
   996  0187  1303               	bcf	3,6	;RP1=0, select bank1
   997  0188  080F               	movf	15,w	;volatile
   998  0189  398F               	andlw	-113
   999  018A  3840               	iorlw	64
  1000  018B  008F               	movwf	15	;volatile
  1001                           
  1002                           ;Oscilador.c: 15:             break;
  1003  018C  29BB               	goto	l48
  1004  018D                     l1359:
  1005                           
  1006                           ;Oscilador.c: 17:             OSCCONbits.IRCF = 0b101;
  1007  018D  1683               	bsf	3,5	;RP0=1, select bank1
  1008  018E  1303               	bcf	3,6	;RP1=0, select bank1
  1009  018F  080F               	movf	15,w	;volatile
  1010  0190  398F               	andlw	-113
  1011  0191  3850               	iorlw	80
  1012  0192  008F               	movwf	15	;volatile
  1013                           
  1014                           ;Oscilador.c: 18:             break;
  1015  0193  29BB               	goto	l48
  1016  0194                     l1361:
  1017                           
  1018                           ;Oscilador.c: 20:             OSCCONbits.IRCF = 0b110;
  1019  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1020  0195  1303               	bcf	3,6	;RP1=0, select bank1
  1021  0196  080F               	movf	15,w	;volatile
  1022  0197  398F               	andlw	-113
  1023  0198  3860               	iorlw	96
  1024  0199  008F               	movwf	15	;volatile
  1025                           
  1026                           ;Oscilador.c: 21:             break;
  1027  019A  29BB               	goto	l48
  1028  019B                     l1363:
  1029                           
  1030                           ;Oscilador.c: 23:             OSCCONbits.IRCF = 0b111;
  1031  019B  3070               	movlw	112
  1032  019C  1683               	bsf	3,5	;RP0=1, select bank1
  1033  019D  1303               	bcf	3,6	;RP1=0, select bank1
  1034  019E  048F               	iorwf	15,f	;volatile
  1035                           
  1036                           ;Oscilador.c: 24:             break;
  1037  019F  29BB               	goto	l48
  1038  01A0                     l1365:
  1039                           
  1040                           ;Oscilador.c: 26:             OSCCONbits.IRCF = 0b111;
  1041  01A0  3070               	movlw	112
  1042  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  1043  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  1044  01A3  048F               	iorwf	15,f	;volatile
  1045                           
  1046                           ;Oscilador.c: 27:             break;
  1047  01A4  29BB               	goto	l48
  1048  01A5                     l1369:
  1049  01A5  0822               	movf	int_osc_MHz@freq,w
  1050  01A6  00A0               	movwf	??_int_osc_MHz
  1051  01A7  01A1               	clrf	??_int_osc_MHz+1
  1052                           
  1053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1054                           ; Switch size 1, requested type "simple"
  1055                           ; Number of cases is 1, Range of values is 0 to 0
  1056                           ; switch strategies available:
  1057                           ; Name         Instructions Cycles
  1058                           ; simple_byte            4     3 (average)
  1059                           ; direct_byte           11     8 (fixed)
  1060                           ; jumptable            260     6 (fixed)
  1061                           ;	Chosen strategy is simple_byte
  1062  01A8  0821               	movf	??_int_osc_MHz+1,w
  1063  01A9  3A00               	xorlw	0	; case 0
  1064  01AA  1903               	skipnz
  1065  01AB  29AD               	goto	l1539
  1066  01AC  29A0               	goto	l1365
  1067  01AD                     l1539:
  1068                           
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 4, Range of values is 1 to 8
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte           13     7 (average)
  1074                           ; direct_byte           35    11 (fixed)
  1075                           ; jumptable            263     9 (fixed)
  1076                           ;	Chosen strategy is simple_byte
  1077  01AD  0820               	movf	??_int_osc_MHz,w
  1078  01AE  3A01               	xorlw	1	; case 1
  1079  01AF  1903               	skipnz
  1080  01B0  2986               	goto	l1357
  1081  01B1  3A03               	xorlw	3	; case 2
  1082  01B2  1903               	skipnz
  1083  01B3  298D               	goto	l1359
  1084  01B4  3A06               	xorlw	6	; case 4
  1085  01B5  1903               	skipnz
  1086  01B6  2994               	goto	l1361
  1087  01B7  3A0C               	xorlw	12	; case 8
  1088  01B8  1903               	skipnz
  1089  01B9  299B               	goto	l1363
  1090  01BA  29A0               	goto	l1365
  1091  01BB                     l48:
  1092                           
  1093                           ;Oscilador.c: 29:     OSCCONbits.SCS = 1;
  1094  01BB  140F               	bsf	15,0	;volatile
  1095  01BC                     l53:
  1096  01BC  0008               	return
  1097  01BD                     __end_of_int_osc_MHz:
  1098                           
  1099                           	psect	text4
  1100  00CC                     __ptext4:	
  1101 ;; *************** function _adc_init *****************
  1102 ;; Defined at:
  1103 ;;		line 14 in file "ADC.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  adc_cs          1    wreg     unsigned char 
  1106 ;;  vref_plus       1    0[BANK0 ] unsigned char 
  1107 ;;  vref_minus      1    1[BANK0 ] unsigned char 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  adc_cs          1    4[BANK0 ] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       2       0       0       0
  1120 ;;      Locals:         0       1       0       0       0
  1121 ;;      Temps:          0       2       0       0       0
  1122 ;;      Totals:         0       5       0       0       0
  1123 ;;Total ram usage:        5 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; Hardware stack levels required when called: 3
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133  00CC                     _adc_init:	
  1134                           ;psect for function _adc_init
  1135                           
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1139                           ;adc_init@adc_cs stored from wreg
  1140  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1141  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1142  00CE  00A4               	movwf	adc_init@adc_cs
  1143  00CF                     l1313:
  1144                           
  1145                           ;ADC.c: 15:     switch(adc_cs){
  1146  00CF  28E5               	goto	l1327
  1147  00D0                     l1315:
  1148                           
  1149                           ;ADC.c: 17:             ADCON0bits.ADCS = 0b00;
  1150  00D0  303F               	movlw	-193
  1151  00D1  059F               	andwf	31,f	;volatile
  1152                           
  1153                           ;ADC.c: 18:             break;
  1154  00D2  2907               	goto	l1331
  1155  00D3                     l1317:
  1156                           
  1157                           ;ADC.c: 20:             ADCON0bits.ADCS = 0b01;
  1158  00D3  081F               	movf	31,w	;volatile
  1159  00D4  393F               	andlw	-193
  1160  00D5  3840               	iorlw	64
  1161  00D6  009F               	movwf	31	;volatile
  1162                           
  1163                           ;ADC.c: 21:             break;
  1164  00D7  2907               	goto	l1331
  1165  00D8                     l1319:
  1166                           
  1167                           ;ADC.c: 23:             ADCON0bits.ADCS = 0b10;
  1168  00D8  081F               	movf	31,w	;volatile
  1169  00D9  393F               	andlw	-193
  1170  00DA  3880               	iorlw	128
  1171  00DB  009F               	movwf	31	;volatile
  1172                           
  1173                           ;ADC.c: 24:             break;
  1174  00DC  2907               	goto	l1331
  1175  00DD                     l1321:
  1176                           
  1177                           ;ADC.c: 26:             ADCON0bits.ADCS = 0b11;
  1178  00DD  30C0               	movlw	192
  1179  00DE  049F               	iorwf	31,f	;volatile
  1180                           
  1181                           ;ADC.c: 27:             break;
  1182  00DF  2907               	goto	l1331
  1183  00E0                     l1323:
  1184                           
  1185                           ;ADC.c: 29:             ADCON0bits.ADCS = 0b01;
  1186  00E0  081F               	movf	31,w	;volatile
  1187  00E1  393F               	andlw	-193
  1188  00E2  3840               	iorlw	64
  1189  00E3  009F               	movwf	31	;volatile
  1190                           
  1191                           ;ADC.c: 30:             break;
  1192  00E4  2907               	goto	l1331
  1193  00E5                     l1327:
  1194  00E5  0824               	movf	adc_init@adc_cs,w
  1195  00E6  00A2               	movwf	??_adc_init
  1196  00E7  01A3               	clrf	??_adc_init+1
  1197                           
  1198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1199                           ; Switch size 1, requested type "simple"
  1200                           ; Number of cases is 1, Range of values is 0 to 0
  1201                           ; switch strategies available:
  1202                           ; Name         Instructions Cycles
  1203                           ; simple_byte            4     3 (average)
  1204                           ; direct_byte           11     8 (fixed)
  1205                           ; jumptable            260     6 (fixed)
  1206                           ;	Chosen strategy is simple_byte
  1207  00E8  0823               	movf	??_adc_init+1,w
  1208  00E9  3A00               	xorlw	0	; case 0
  1209  00EA  1903               	skipnz
  1210  00EB  28ED               	goto	l1541
  1211  00EC  28E0               	goto	l1323
  1212  00ED                     l1541:
  1213                           
  1214                           ; Switch size 1, requested type "simple"
  1215                           ; Number of cases is 4, Range of values is 0 to 3
  1216                           ; switch strategies available:
  1217                           ; Name         Instructions Cycles
  1218                           ; simple_byte           13     7 (average)
  1219                           ; direct_byte           20     8 (fixed)
  1220                           ; jumptable            260     6 (fixed)
  1221                           ;	Chosen strategy is simple_byte
  1222  00ED  0822               	movf	??_adc_init,w
  1223  00EE  3A00               	xorlw	0	; case 0
  1224  00EF  1903               	skipnz
  1225  00F0  28D0               	goto	l1315
  1226  00F1  3A01               	xorlw	1	; case 1
  1227  00F2  1903               	skipnz
  1228  00F3  28D3               	goto	l1317
  1229  00F4  3A03               	xorlw	3	; case 2
  1230  00F5  1903               	skipnz
  1231  00F6  28D8               	goto	l1319
  1232  00F7  3A01               	xorlw	1	; case 3
  1233  00F8  1903               	skipnz
  1234  00F9  28DD               	goto	l1321
  1235  00FA  28E0               	goto	l1323
  1236  00FB                     l25:	
  1237                           ;ADC.c: 33:         case 0:
  1238                           
  1239                           
  1240                           ;ADC.c: 34:             ADCON1bits.VCFG0 = 0;
  1241  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1242  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  1243  00FD  121F               	bcf	31,4	;volatile
  1244                           
  1245                           ;ADC.c: 35:             break;
  1246  00FE  2923               	goto	l1335
  1247  00FF                     l27:	
  1248                           ;ADC.c: 36:         case 1:
  1249                           
  1250                           
  1251                           ;ADC.c: 37:             ADCON1bits.VCFG0 = 1;
  1252  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0100  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0101  161F               	bsf	31,4	;volatile
  1255                           
  1256                           ;ADC.c: 38:             break;
  1257  0102  2923               	goto	l1335
  1258  0103                     l28:	
  1259                           ;ADC.c: 39:         default:
  1260                           
  1261                           
  1262                           ;ADC.c: 40:             ADCON1bits.VCFG0 = 0;
  1263  0103  1683               	bsf	3,5	;RP0=1, select bank1
  1264  0104  1303               	bcf	3,6	;RP1=0, select bank1
  1265  0105  121F               	bcf	31,4	;volatile
  1266                           
  1267                           ;ADC.c: 41:             break;
  1268  0106  2923               	goto	l1335
  1269  0107                     l1331:
  1270  0107  0820               	movf	adc_init@vref_plus,w
  1271  0108  00A2               	movwf	??_adc_init
  1272  0109  01A3               	clrf	??_adc_init+1
  1273                           
  1274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1275                           ; Switch size 1, requested type "simple"
  1276                           ; Number of cases is 1, Range of values is 0 to 0
  1277                           ; switch strategies available:
  1278                           ; Name         Instructions Cycles
  1279                           ; simple_byte            4     3 (average)
  1280                           ; direct_byte           11     8 (fixed)
  1281                           ; jumptable            260     6 (fixed)
  1282                           ;	Chosen strategy is simple_byte
  1283  010A  0823               	movf	??_adc_init+1,w
  1284  010B  3A00               	xorlw	0	; case 0
  1285  010C  1903               	skipnz
  1286  010D  290F               	goto	l1543
  1287  010E  2903               	goto	l28
  1288  010F                     l1543:
  1289                           
  1290                           ; Switch size 1, requested type "simple"
  1291                           ; Number of cases is 2, Range of values is 0 to 1
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte            7     4 (average)
  1295                           ; direct_byte           14     8 (fixed)
  1296                           ; jumptable            260     6 (fixed)
  1297                           ;	Chosen strategy is simple_byte
  1298  010F  0822               	movf	??_adc_init,w
  1299  0110  3A00               	xorlw	0	; case 0
  1300  0111  1903               	skipnz
  1301  0112  28FB               	goto	l25
  1302  0113  3A01               	xorlw	1	; case 1
  1303  0114  1903               	skipnz
  1304  0115  28FF               	goto	l27
  1305  0116  2903               	goto	l28
  1306  0117                     l30:	
  1307                           ;ADC.c: 44:         case 0:
  1308                           
  1309                           
  1310                           ;ADC.c: 45:             ADCON1bits.VCFG1 = 0;
  1311  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1312  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1313  0119  129F               	bcf	31,5	;volatile
  1314                           
  1315                           ;ADC.c: 46:             break;
  1316  011A  2935               	goto	l31
  1317  011B                     l32:	
  1318                           ;ADC.c: 47:         case 1:
  1319                           
  1320                           
  1321                           ;ADC.c: 48:             ADCON1bits.VCFG1 = 1;
  1322  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1323  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1324  011D  169F               	bsf	31,5	;volatile
  1325                           
  1326                           ;ADC.c: 49:             break;
  1327  011E  2935               	goto	l31
  1328  011F                     l33:	
  1329                           ;ADC.c: 50:         default:
  1330                           
  1331                           
  1332                           ;ADC.c: 51:             ADCON1bits.VCFG1 = 0;
  1333  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1334  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1335  0121  129F               	bcf	31,5	;volatile
  1336                           
  1337                           ;ADC.c: 52:             break;
  1338  0122  2935               	goto	l31
  1339  0123                     l1335:
  1340  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0125  0821               	movf	adc_init@vref_minus,w
  1343  0126  00A2               	movwf	??_adc_init
  1344  0127  01A3               	clrf	??_adc_init+1
  1345                           
  1346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1347                           ; Switch size 1, requested type "simple"
  1348                           ; Number of cases is 1, Range of values is 0 to 0
  1349                           ; switch strategies available:
  1350                           ; Name         Instructions Cycles
  1351                           ; simple_byte            4     3 (average)
  1352                           ; direct_byte           11     8 (fixed)
  1353                           ; jumptable            260     6 (fixed)
  1354                           ;	Chosen strategy is simple_byte
  1355  0128  0823               	movf	??_adc_init+1,w
  1356  0129  3A00               	xorlw	0	; case 0
  1357  012A  1903               	skipnz
  1358  012B  292D               	goto	l1545
  1359  012C  291F               	goto	l33
  1360  012D                     l1545:
  1361                           
  1362                           ; Switch size 1, requested type "simple"
  1363                           ; Number of cases is 2, Range of values is 0 to 1
  1364                           ; switch strategies available:
  1365                           ; Name         Instructions Cycles
  1366                           ; simple_byte            7     4 (average)
  1367                           ; direct_byte           14     8 (fixed)
  1368                           ; jumptable            260     6 (fixed)
  1369                           ;	Chosen strategy is simple_byte
  1370  012D  0822               	movf	??_adc_init,w
  1371  012E  3A00               	xorlw	0	; case 0
  1372  012F  1903               	skipnz
  1373  0130  2917               	goto	l30
  1374  0131  3A01               	xorlw	1	; case 1
  1375  0132  1903               	skipnz
  1376  0133  291B               	goto	l32
  1377  0134  291F               	goto	l33
  1378  0135                     l31:
  1379                           
  1380                           ;ADC.c: 54:     ADCON1bits.ADFM = 1;
  1381  0135  179F               	bsf	31,7	;volatile
  1382                           
  1383                           ;ADC.c: 55:     ADCON0bits.ADON = 1;
  1384  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0138  141F               	bsf	31,0	;volatile
  1387                           
  1388                           ;ADC.c: 56:     PIE1bits.ADIE = 1;
  1389  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1390  013A  1303               	bcf	3,6	;RP1=0, select bank1
  1391  013B  170C               	bsf	12,6	;volatile
  1392                           
  1393                           ;ADC.c: 57:     PIR1bits.ADIF = 0;
  1394  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1395  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1396  013E  130C               	bcf	12,6	;volatile
  1397  013F                     l34:
  1398  013F  0008               	return
  1399  0140                     __end_of_adc_init:
  1400                           
  1401                           	psect	text5
  1402  001E                     __ptext5:	
  1403 ;; *************** function _SPI_slave *****************
  1404 ;; Defined at:
  1405 ;;		line 44 in file "Main_Esclavo.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0
  1421 ;;      Temps:          4       0       0       0       0
  1422 ;;      Totals:         4       0       0       0       0
  1423 ;;Total ram usage:        4 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; Hardware stack levels required when called: 2
  1426 ;; This function calls:
  1427 ;;		_adc_read
  1428 ;;		_spiRead
  1429 ;;		_spiWrite
  1430 ;; This function is called by:
  1431 ;;		Interrupt level 1
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435  001E                     _SPI_slave:	
  1436                           ;psect for function _SPI_slave
  1437                           
  1438  001E                     i1l1125:
  1439                           
  1440                           ;Main_Esclavo.c: 45:     if(PIR1bits.ADIF){
  1441  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1442  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0020  1F0C               	btfss	12,6	;volatile
  1444  0021  2823               	goto	u17_21
  1445  0022  2824               	goto	u17_20
  1446  0023                     u17_21:
  1447  0023  287E               	goto	i1l1141
  1448  0024                     u17_20:
  1449  0024                     i1l1127:
  1450                           
  1451                           ;Main_Esclavo.c: 46:         if(ADCON0bits.CHS == 0){
  1452  0024  0C1F               	rrf	31,w	;volatile
  1453  0025  00F2               	movwf	??_SPI_slave
  1454  0026  0C72               	rrf	??_SPI_slave,w
  1455  0027  390F               	andlw	15
  1456  0028  3A00               	xorlw	0
  1457  0029  1D03               	skipz
  1458  002A  282C               	goto	u18_21
  1459  002B  282D               	goto	u18_20
  1460  002C                     u18_21:
  1461  002C  284E               	goto	i1l1133
  1462  002D                     u18_20:
  1463  002D                     i1l1129:
  1464                           
  1465                           ;Main_Esclavo.c: 47:             ADRESH_1 = (adc_read()>>2) & 255;
  1466  002D  120A  118A  21FA  120A  118A  	fcall	_adc_read
  1467  0032  0870               	movf	?_adc_read,w
  1468  0033  00F2               	movwf	??_SPI_slave
  1469  0034  0871               	movf	?_adc_read+1,w
  1470  0035  00F3               	movwf	??_SPI_slave+1
  1471  0036  1003               	clrc
  1472  0037  0CF3               	rrf	??_SPI_slave+1,f
  1473  0038  0CF2               	rrf	??_SPI_slave,f
  1474  0039  1003               	clrc
  1475  003A  0CF3               	rrf	??_SPI_slave+1,f
  1476  003B  0CF2               	rrf	??_SPI_slave,f
  1477  003C  30FF               	movlw	255
  1478  003D  0572               	andwf	??_SPI_slave,w
  1479  003E  00F8               	movwf	_ADRESH_1
  1480  003F  3000               	movlw	0
  1481  0040  0573               	andwf	??_SPI_slave+1,w
  1482  0041  00F9               	movwf	_ADRESH_1+1
  1483  0042                     i1l1131:
  1484                           
  1485                           ;Main_Esclavo.c: 48:             ADRESLS_1 = adc_read()& 3;
  1486  0042  120A  118A  21FA  120A  118A  	fcall	_adc_read
  1487  0047  3003               	movlw	3
  1488  0048  0570               	andwf	?_adc_read,w
  1489  0049  00F6               	movwf	_ADRESLS_1
  1490  004A  3000               	movlw	0
  1491  004B  0571               	andwf	?_adc_read+1,w
  1492  004C  00F7               	movwf	_ADRESLS_1+1
  1493                           
  1494                           ;Main_Esclavo.c: 49:         } else if(ADCON0bits.CHS == 1){
  1495  004D  287B               	goto	i1l1139
  1496  004E                     i1l1133:
  1497  004E  0C1F               	rrf	31,w	;volatile
  1498  004F  00F2               	movwf	??_SPI_slave
  1499  0050  0C72               	rrf	??_SPI_slave,w
  1500  0051  390F               	andlw	15
  1501  0052  3A01               	xorlw	1
  1502  0053  1D03               	skipz
  1503  0054  2856               	goto	u19_21
  1504  0055  2857               	goto	u19_20
  1505  0056                     u19_21:
  1506  0056  287B               	goto	i1l1139
  1507  0057                     u19_20:
  1508  0057                     i1l1135:
  1509                           
  1510                           ;Main_Esclavo.c: 50:             ADRESH_2 = (adc_read()>>2) & 255;
  1511  0057  120A  118A  21FA  120A  118A  	fcall	_adc_read
  1512  005C  0870               	movf	?_adc_read,w
  1513  005D  00F2               	movwf	??_SPI_slave
  1514  005E  0871               	movf	?_adc_read+1,w
  1515  005F  00F3               	movwf	??_SPI_slave+1
  1516  0060  1003               	clrc
  1517  0061  0CF3               	rrf	??_SPI_slave+1,f
  1518  0062  0CF2               	rrf	??_SPI_slave,f
  1519  0063  1003               	clrc
  1520  0064  0CF3               	rrf	??_SPI_slave+1,f
  1521  0065  0CF2               	rrf	??_SPI_slave,f
  1522  0066  30FF               	movlw	255
  1523  0067  0572               	andwf	??_SPI_slave,w
  1524  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1526  006A  00A8               	movwf	_ADRESH_2
  1527  006B  3000               	movlw	0
  1528  006C  0573               	andwf	??_SPI_slave+1,w
  1529  006D  00A9               	movwf	_ADRESH_2+1
  1530  006E                     i1l1137:
  1531                           
  1532                           ;Main_Esclavo.c: 51:             ADRESLS_2 = adc_read()& 3;
  1533  006E  120A  118A  21FA  120A  118A  	fcall	_adc_read
  1534  0073  3003               	movlw	3
  1535  0074  0570               	andwf	?_adc_read,w
  1536  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0077  00A6               	movwf	_ADRESLS_2
  1539  0078  3000               	movlw	0
  1540  0079  0571               	andwf	?_adc_read+1,w
  1541  007A  00A7               	movwf	_ADRESLS_2+1
  1542  007B                     i1l1139:
  1543                           
  1544                           ;Main_Esclavo.c: 53:         PIR1bits.ADIF = 0;
  1545  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1546  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1547  007D  130C               	bcf	12,6	;volatile
  1548  007E                     i1l1141:
  1549                           
  1550                           ;Main_Esclavo.c: 55:     if (PIR1bits.SSPIF){
  1551  007E  1D8C               	btfss	12,3	;volatile
  1552  007F  2881               	goto	u20_21
  1553  0080  2882               	goto	u20_20
  1554  0081                     u20_21:
  1555  0081  28C5               	goto	i1l112
  1556  0082                     u20_20:
  1557  0082                     i1l1143:
  1558                           
  1559                           ;Main_Esclavo.c: 56:         ENVIO = spiRead();
  1560  0082  120A  118A  2204  120A  118A  	fcall	_spiRead
  1561  0087  00F2               	movwf	??_SPI_slave
  1562  0088  0872               	movf	??_SPI_slave,w
  1563  0089  00FA               	movwf	_ENVIO
  1564  008A                     i1l1145:
  1565                           
  1566                           ;Main_Esclavo.c: 57:         if (ENVIO == 72){
  1567  008A  3048               	movlw	72
  1568  008B  067A               	xorwf	_ENVIO,w
  1569  008C  1D03               	btfss	3,2
  1570  008D  288F               	goto	u21_21
  1571  008E  2890               	goto	u21_20
  1572  008F                     u21_21:
  1573  008F  2897               	goto	i1l1149
  1574  0090                     u21_20:
  1575  0090                     i1l1147:
  1576                           
  1577                           ;Main_Esclavo.c: 58:             spiWrite(ADRESH_1);
  1578  0090  0878               	movf	_ADRESH_1,w
  1579  0091  120A  118A  2214  120A  118A  	fcall	_spiWrite
  1580                           
  1581                           ;Main_Esclavo.c: 59:         } else if (ENVIO == 76) {
  1582  0096  28C2               	goto	i1l1161
  1583  0097                     i1l1149:
  1584  0097  304C               	movlw	76
  1585  0098  067A               	xorwf	_ENVIO,w
  1586  0099  1D03               	btfss	3,2
  1587  009A  289C               	goto	u22_21
  1588  009B  289D               	goto	u22_20
  1589  009C                     u22_21:
  1590  009C  28A4               	goto	i1l1153
  1591  009D                     u22_20:
  1592  009D                     i1l1151:
  1593                           
  1594                           ;Main_Esclavo.c: 60:             spiWrite(ADRESLS_1);
  1595  009D  0876               	movf	_ADRESLS_1,w
  1596  009E  120A  118A  2214  120A  118A  	fcall	_spiWrite
  1597                           
  1598                           ;Main_Esclavo.c: 61:         } else if (ENVIO == 65){
  1599  00A3  28C2               	goto	i1l1161
  1600  00A4                     i1l1153:
  1601  00A4  3041               	movlw	65
  1602  00A5  067A               	xorwf	_ENVIO,w
  1603  00A6  1D03               	btfss	3,2
  1604  00A7  28A9               	goto	u23_21
  1605  00A8  28AA               	goto	u23_20
  1606  00A9                     u23_21:
  1607  00A9  28B3               	goto	i1l1157
  1608  00AA                     u23_20:
  1609  00AA                     i1l1155:
  1610                           
  1611                           ;Main_Esclavo.c: 62:             spiWrite(ADRESH_2);
  1612  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1613  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1614  00AC  0828               	movf	_ADRESH_2,w
  1615  00AD  120A  118A  2214  120A  118A  	fcall	_spiWrite
  1616                           
  1617                           ;Main_Esclavo.c: 63:         } else if (ENVIO == 66){
  1618  00B2  28C2               	goto	i1l1161
  1619  00B3                     i1l1157:
  1620  00B3  3042               	movlw	66
  1621  00B4  067A               	xorwf	_ENVIO,w
  1622  00B5  1D03               	btfss	3,2
  1623  00B6  28B8               	goto	u24_21
  1624  00B7  28B9               	goto	u24_20
  1625  00B8                     u24_21:
  1626  00B8  28C2               	goto	i1l108
  1627  00B9                     u24_20:
  1628  00B9                     i1l1159:
  1629                           
  1630                           ;Main_Esclavo.c: 64:             spiWrite(ADRESLS_2);
  1631  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1632  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1633  00BB  0826               	movf	_ADRESLS_2,w
  1634  00BC  120A  118A  2214  120A  118A  	fcall	_spiWrite
  1635  00C1  28C2               	goto	i1l1161
  1636  00C2                     i1l108:
  1637  00C2                     i1l1161:
  1638                           
  1639                           ;Main_Esclavo.c: 66:         PIR1bits.SSPIF = 0;
  1640  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1641  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1642  00C4  118C               	bcf	12,3	;volatile
  1643  00C5                     i1l112:
  1644  00C5  0875               	movf	??_SPI_slave+3,w
  1645  00C6  008A               	movwf	10
  1646  00C7  0E74               	swapf	??_SPI_slave+2,w
  1647  00C8  0083               	movwf	3
  1648  00C9  0EFE               	swapf	btemp,f
  1649  00CA  0E7E               	swapf	btemp,w
  1650  00CB  0009               	retfie
  1651  00CC                     __end_of_SPI_slave:
  1652                           
  1653                           	psect	intentry
  1654  0004                     __pintentry:	
  1655                           ;incstack = 0
  1656                           ; Regs used in _SPI_slave: [wreg+status,2+status,0+pclath+cstack]
  1657                           
  1658  0004                     interrupt_function:
  1659  007E                     saved_w	set	btemp
  1660  0004  00FE               	movwf	btemp
  1661  0005  0E03               	swapf	3,w
  1662  0006  00F4               	movwf	??_SPI_slave+2
  1663  0007  080A               	movf	10,w
  1664  0008  00F5               	movwf	??_SPI_slave+3
  1665  0009  120A  118A  281E   	ljmp	_SPI_slave
  1666                           
  1667                           	psect	text6
  1668  0214                     __ptext6:	
  1669 ;; *************** function _spiWrite *****************
  1670 ;; Defined at:
  1671 ;;		line 34 in file "SPI.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  dat             1    wreg     unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  dat             1    0[COMMON] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         1       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0
  1688 ;;      Totals:         1       0       0       0       0
  1689 ;;Total ram usage:        1 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_SPI_slave
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698  0214                     _spiWrite:	
  1699                           ;psect for function _spiWrite
  1700                           
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in _spiWrite: [wreg]
  1704                           ;spiWrite@dat stored from wreg
  1705  0214  00F0               	movwf	spiWrite@dat
  1706  0215                     i1l1099:
  1707                           
  1708                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1709  0215  0870               	movf	spiWrite@dat,w
  1710  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0218  0093               	movwf	19	;volatile
  1713  0219                     i1l153:
  1714  0219  0008               	return
  1715  021A                     __end_of_spiWrite:
  1716                           
  1717                           	psect	text7
  1718  0204                     __ptext7:	
  1719 ;; *************** function _spiRead *****************
  1720 ;; Defined at:
  1721 ;;		line 47 in file "SPI.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      unsigned char 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1735 ;;      Params:         0       0       0       0       0
  1736 ;;      Locals:         0       0       0       0       0
  1737 ;;      Temps:          0       0       0       0       0
  1738 ;;      Totals:         0       0       0       0       0
  1739 ;;Total ram usage:        0 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; Hardware stack levels required when called: 1
  1742 ;; This function calls:
  1743 ;;		_spiReceiveWait
  1744 ;; This function is called by:
  1745 ;;		_SPI_slave
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749  0204                     _spiRead:	
  1750                           ;psect for function _spiRead
  1751                           
  1752  0204                     i1l1093:	
  1753                           ;incstack = 0
  1754                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1755                           
  1756                           
  1757                           ;SPI.c: 49:     spiReceiveWait();
  1758  0204  120A  118A  220D  120A  118A  	fcall	_spiReceiveWait
  1759  0209                     i1l1095:
  1760                           
  1761                           ;SPI.c: 50:     return(SSPBUF);
  1762  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1763  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1764  020B  0813               	movf	19,w	;volatile
  1765  020C                     i1l161:
  1766  020C  0008               	return
  1767  020D                     __end_of_spiRead:
  1768                           
  1769                           	psect	text8
  1770  020D                     __ptext8:	
  1771 ;; *************** function _spiReceiveWait *****************
  1772 ;; Defined at:
  1773 ;;		line 29 in file "SPI.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		None
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_spiRead
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800  020D                     _spiReceiveWait:	
  1801                           ;psect for function _spiReceiveWait
  1802                           
  1803  020D                     i1l1021:	
  1804                           ;incstack = 0
  1805                           ; Regs used in _spiReceiveWait: []
  1806                           
  1807  020D                     i1l147:	
  1808                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1809                           
  1810  020D  1683               	bsf	3,5	;RP0=1, select bank1
  1811  020E  1303               	bcf	3,6	;RP1=0, select bank1
  1812  020F  1C14               	btfss	20,0	;volatile
  1813  0210  2A12               	goto	u16_21
  1814  0211  2A13               	goto	u16_20
  1815  0212                     u16_21:
  1816  0212  2A0D               	goto	i1l147
  1817  0213                     u16_20:
  1818  0213                     i1l150:
  1819  0213  0008               	return
  1820  0214                     __end_of_spiReceiveWait:
  1821                           
  1822                           	psect	text9
  1823  01FA                     __ptext9:	
  1824 ;; *************** function _adc_read *****************
  1825 ;; Defined at:
  1826 ;;		line 66 in file "ADC.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  2    0[COMMON] unsigned int 
  1833 ;; Registers used:
  1834 ;;		wreg
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         2       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0
  1843 ;;      Totals:         2       0       0       0       0
  1844 ;;Total ram usage:        2 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_SPI_slave
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853  01FA                     _adc_read:	
  1854                           ;psect for function _adc_read
  1855                           
  1856  01FA                     i1l1065:	
  1857                           ;incstack = 0
  1858                           ; Regs used in _adc_read: [wreg]
  1859                           
  1860                           
  1861                           ;ADC.c: 67:     PIR1bits.ADIF = 0;
  1862  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1863  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1864  01FC  130C               	bcf	12,6	;volatile
  1865  01FD                     i1l1067:
  1866                           
  1867                           ;ADC.c: 68:     return ((ADRESH << 8) + ADRESL);
  1868  01FD  081E               	movf	30,w	;volatile
  1869  01FE  00F1               	movwf	?_adc_read+1
  1870  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1871  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1872  0201  081E               	movf	30,w	;volatile
  1873  0202  00F0               	movwf	?_adc_read
  1874  0203                     i1l41:
  1875  0203  0008               	return
  1876  0204                     __end_of_adc_read:
  1877  007E                     btemp	set	126	;btemp
  1878  007E                     wtemp0	set	126
  1879                           
  1880                           	psect	idloc
  1881                           
  1882                           ;Config register IDLOC0 @ 0x2000
  1883                           ;	unspecified, using default values
  1884  2000                     	org	8192
  1885  2000  3FFF               	dw	16383
  1886                           
  1887                           ;Config register IDLOC1 @ 0x2001
  1888                           ;	unspecified, using default values
  1889  2001                     	org	8193
  1890  2001  3FFF               	dw	16383
  1891                           
  1892                           ;Config register IDLOC2 @ 0x2002
  1893                           ;	unspecified, using default values
  1894  2002                     	org	8194
  1895  2002  3FFF               	dw	16383
  1896                           
  1897                           ;Config register IDLOC3 @ 0x2003
  1898                           ;	unspecified, using default values
  1899  2003                     	org	8195
  1900  2003  3FFF               	dw	16383
  1901                           
  1902                           	psect	config
  1903                           
  1904                           ;Config register CONFIG1 @ 0x2007
  1905                           ;	Oscillator Selection bits
  1906                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1907                           ;	Watchdog Timer Enable bit
  1908                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1909                           ;	Power-up Timer Enable bit
  1910                           ;	PWRTE = OFF, PWRT disabled
  1911                           ;	RE3/MCLR pin function select bit
  1912                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1913                           ;	Code Protection bit
  1914                           ;	CP = OFF, Program memory code protection is disabled
  1915                           ;	Data Code Protection bit
  1916                           ;	CPD = OFF, Data memory code protection is disabled
  1917                           ;	Brown Out Reset Selection bits
  1918                           ;	BOREN = OFF, BOR disabled
  1919                           ;	Internal External Switchover bit
  1920                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1921                           ;	Fail-Safe Clock Monitor Enabled bit
  1922                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1923                           ;	Low Voltage Programming Enable bit
  1924                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1925                           ;	In-Circuit Debugger Mode bit
  1926                           ;	DEBUG = 0x1, unprogrammed default
  1927  2007                     	org	8199
  1928  2007  20D4               	dw	8404
  1929                           
  1930                           ;Config register CONFIG2 @ 0x2008
  1931                           ;	Brown-out Reset Selection bit
  1932                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1933                           ;	Flash Program Memory Self Write Enable bits
  1934                           ;	WRT = OFF, Write protection off
  1935  2008                     	org	8200
  1936  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      6      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _SPI_slave in COMMON

    _SPI_slave->_adc_read

Critical Paths under _main in BANK0

    _main->_adc_init
    _setup->_spiInit

Critical Paths under _SPI_slave in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI_slave in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SPI_slave in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI_slave in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     760
                                              5 BANK0      1     1      0
                           _adc_init
                        _int_osc_MHz
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _int_osc_MHz                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             5     3      2     273
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _SPI_slave                                            4     4      0      22
                                              2 COMMON     4     4      0
                           _adc_read
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _adc_read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _int_osc_MHz
   _setup
     _spiInit

 _SPI_slave (ROOT)
   _adc_read
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Aug 09 18:18:14 2022

            _SSPSTATbits 0094                       l30 0117                       l31 0135  
                     l32 011B                       l33 011F                       l25 00FB  
                     l34 013F                       l27 00FF                       l28 0103  
                     l53 01BC                       l48 01BB                      l143 01F4  
                    l127 01DB                      l144 01F9                      u300 0164  
                    u301 0163                      u310 0172                      u311 0171  
                    u327 0178                      u280 01E8                      u281 01E7  
                    u290 015B                      u291 015A                     l1311 01F3  
                   l1303 01DF                     l1321 00DD                     l1313 00CF  
                   l1305 01E8                     l1401 0140                     l1323 00E0  
                   l1331 0107                     l1315 00D0                     l1307 01EC  
                   l1411 0169                     l1403 0150                     l1317 00D3  
                   l1309 01EE                     l1413 0172                     l1405 0155  
                   l1335 0123                     l1319 00D8                     l1327 00E5  
                   l1415 0174                     l1407 015B                     l1361 0194  
                   l1417 017B                     l1409 0164                     l1363 019B  
                   l1355 0185                     l1541 00ED                     l1365 01A0  
                   l1357 0186                     l1381 01C2                     l1543 010F  
                   l1359 018D                     l1391 01D3                     l1383 01C5  
                   l1545 012D                     l1369 01A5                     l1393 01D4  
                   l1385 01C6                     l1377 01BD                     l1539 01AD  
                   l1395 01D7                     l1387 01C7                     l1379 01C1  
                   l1397 01DA                     l1389 01CA                     i1l41 0203  
                   _main 0140                     btemp 007E                     start 000C  
                  ?_main 0070                    _ANSEL 0188                    _ENVIO 007A  
                  i1l112 00C5                    i1l108 00C2                    i1l150 0213  
                  i1l161 020C                    i1l153 0219                    i1l147 020D  
                  u20_20 0082                    u20_21 0081                    u21_20 0090  
                  u21_21 008F                    u22_20 009D                    u22_21 009C  
                  u23_20 00AA                    u23_21 00A9                    u16_20 0213  
                  u24_20 00B9                    u16_21 0212                    u24_21 00B8  
                  u17_20 0024                    u17_21 0023                    u18_20 002D  
                  u18_21 002C                    u19_20 0057                    u19_21 0056  
                  _PORTA 0005       adc_init@vref_minus 0021          int_osc_MHz@freq 0022  
                  _setup 01BD             ?_int_osc_MHz 0070                    pclath 000A  
        __end_of_spiInit 01FA          __end_of_spiRead 020D                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0182  
                 ??_main 0025                   _ADRESH 001E                   _ADRESL 009E  
                 ?_setup 0070                   _ANSELH 0189         __end_of_adc_init 0140  
       __end_of_adc_read 0204                   i1l1021 020D                   i1l1131 0042  
                 i1l1133 004E                   i1l1141 007E                   i1l1125 001E  
                 i1l1151 009D                   i1l1143 0082                   i1l1135 0057  
                 i1l1127 0024                   i1l1065 01FA                   i1l1153 00A4  
                 i1l1161 00C2                   i1l1145 008A                   i1l1137 006E  
                 i1l1129 002D                   i1l1067 01FD                   i1l1155 00AA  
                 i1l1147 0090                   i1l1139 007B                   i1l1093 0204  
                 i1l1157 00B3                   i1l1149 0097                   i1l1095 0209  
                 i1l1159 00B9                   i1l1099 0215                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E        __end_of_SPI_slave 00CC         __end_of_spiWrite 021A  
              ??_spiInit 0023                ??_spiRead 0070  __end_of__initialization 001A  
         __pcstackCOMMON 0070            __end_of_setup 01DC           adc_init@adc_cs 0024  
                ??_setup 0024               __pbssBANK0 0026               __pmaintext 0140  
             __pintentry 0004                ?_adc_init 0020                ?_adc_read 0070  
                _SSPSTAT 0094                _ADRESLS_1 0076                _ADRESLS_2 0026  
              ?_spiWrite 0070               ??_adc_init 0022               ??_adc_read 0072  
                __ptext1 01BD                  __ptext2 01DC                  __ptext3 0182  
                __ptext4 00CC                  __ptext5 001E                  __ptext6 0214  
                __ptext7 0204                  __ptext8 020D                  __ptext9 01FA  
                _spiInit 01DC                  _spiRead 0204     end_of_initialization 001A  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
              _SPI_slave 001E           _spiReceiveWait 020D        adc_init@vref_plus 0020  
    start_initialization 000F               ?_SPI_slave 0070   __end_of_spiReceiveWait 0214  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
          ??_int_osc_MHz 0020          ?_spiReceiveWait 0070                 _ADRESH_1 0078  
               _ADRESH_2 0028                 ?_spiInit 0020                 ?_spiRead 0070  
            ??_SPI_slave 0072     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C      __end_of_int_osc_MHz 01BD       spiInit@sDataSample 0020  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _adc_init 00CC                 _adc_read 01FA              _int_osc_MHz 0182  
               _spiWrite 0214             spiInit@sType 0023        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
             _OSCCONbits 008F  
